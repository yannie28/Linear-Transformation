/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lineartransformation;
import java.util.Arrays;
/**
 *
 * @author Arianne
 */
public class LinearTransformationUI extends javax.swing.JFrame {

    /**
     * Creates new form LinearTransformationUI
     */
    public LinearTransformationUI() {
        initComponents();
        answer.setText("");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        m = new javax.swing.JTextField();
        n = new javax.swing.JTextField();
        a = new javax.swing.JTextField();
        b = new javax.swing.JTextField();
        c = new javax.swing.JTextField();
        arrow = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        y = new javax.swing.JLabel();
        z = new javax.swing.JLabel();
        solve = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        arrow1 = new javax.swing.JLabel();
        arrow2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        answer = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("LINEAR TRANSFORMATION");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Rn");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Rm");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("→");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("→");

        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });

        n.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nMouseClicked(evt);
            }
        });
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });

        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionPerformed(evt);
            }
        });

        c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActionPerformed(evt);
            }
        });

        arrow.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        arrow.setText("→");

        x.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        x.setText("x");

        y.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        y.setText("y");

        z.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        z.setText("z");

        solve.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        solve.setText("Solve");
        solve.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        solve.setMaximumSize(new java.awt.Dimension(25, 21));
        solve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear.setText("Clear");
        clear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear.setMaximumSize(new java.awt.Dimension(25, 21));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel6.setText("           ");

        arrow1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        arrow1.setText("   ");

        arrow2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        arrow2.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(x)
                        .addGap(18, 18, 18)
                        .addComponent(arrow))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(y)
                        .addGap(18, 18, 18)
                        .addComponent(arrow1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(z)
                        .addGap(18, 18, 18)
                        .addComponent(arrow2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(a, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                        .addComponent(b))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel6))
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(solve, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(arrow)
                            .addComponent(x))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(arrow1)
                            .addComponent(y)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(arrow2)
                        .addComponent(z)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solve, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        answer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        answer.setText("L is a Linear Transformation");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(answer)
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(answer)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Exit");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setMaximumSize(new java.awt.Dimension(25, 21));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Show that L is a linear transformation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(90, 90, 90))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        n.setText("");
        m.setText("");
        a.setText("");
        b.setText("");
        c.setText("");
        answer.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void solveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveActionPerformed
        // TODO add your handling code here:
        int dimension = Integer.parseInt(m.getText()); //dimension of the Rm
        String term[] = {a.getText(), b.getText(), c.getText()}; //array of the Rm //L(u)
        String box[][] = new String [3][]; //initialization of the Rm for each box
        box[0] = new String [a.getText().length()]; //firstbox length of the string
        box[1] = new String [b.getText().length()]; //secondbox length of the string
        box[2] = new String [c.getText().length()]; //thirdbox length of the string
        String box1[][] = new String [3][]; //initialization of the Rm for each box
        box1[0] = new String [a.getText().length()]; //firstbox length of the string
        box1[1] = new String [b.getText().length()]; //secondbox length of the string
        box1[2] = new String [c.getText().length()]; //thirdbox length of the string
        int flag = 0, counter = 0;
        String multiplier = "";
        
        String right = "L is a Linear Transformation";
        String wrong = "L is not a Linear Transformation";
 
        //division per box
        end:
        for(int i=0;i<dimension;i++){
            int position = 0;
            //position of characters of each box
            outer:
            for(int j =0;j<term[i].length();j++){
                //compare if variable/letter
                char alphabet = 'a';
                for(int k = 0;k<26;k++){
                    if(term[i].charAt(j) == alphabet){
                        position = j;
                        break outer;
                    }
                    else
                    alphabet++;
                }
            }

            //conditions
            if(position != term[i].length()-1){
                
                char alphabet = 'a';
                for(int l=0;l<26;l++){
                    if(term[i].charAt(position+1) == alphabet){
                        answer.setText(wrong);
                        break end;
                    }
                    else
                    alphabet++;
                }
                
                alphabet = 'a';
                int parenthesis = 0, sum = 0;
                for(int p=0;p<term[i].length();p++){
                    if(term[i].charAt(p) == '(')
                        parenthesis++;
                    if(term[i].charAt(p) == ')')
                        sum--;
                    if(term[i].charAt(p) == '+' || term[i].charAt(p) == '-' )
                        sum++;     
                }
                if(parenthesis > 1 && sum == 0){
                    answer.setText(wrong);
                    break;
                }

                else if(term[i].charAt(position+1) == '('){
                    answer.setText(wrong);
                    break;
                }
                
                else if(term[i].charAt(position+1) == '/' || term[i].charAt(position+1) == '*' || term[i].charAt(position+1) == '('){
                    for(int l=0;l<26;l++){
                        if(term[i].charAt(position+2) == alphabet){
                            answer.setText(wrong);
                            break end;
                        }
                        else
                            alphabet++;
                    }
                }
                else 
                    answer.setText(right);
            
                for(int p=0;p<term[i].length();p++){
                    if(term[i].charAt(p) == ')' && p != p+1){
                        if(term[i].charAt(p+1) == 'x' || term[i].charAt(p+1) == 'y' || term[i].charAt(p+1) == 'z'){
                            answer.setText(wrong);
                            break end;
                        }       
                    }             
                }
                
            }
            else answer.setText(right);
        }

        //L(v)
        for(int i=0; i<term.length; i++){
            for(int j=0; j<term[i].length(); j++){
                if(term[i].charAt(j) == 'x'){
                    term[i] = term[i].replace(term[i].charAt(j),'a');
                }
                else if(term[i].charAt(j) == 'y'){
                    term[i] = term[i].replace(term[i].charAt(j),'b');
                }
                if(term[i].charAt(j) == 'z'){
                    term[i] = term[i].replace(term[i].charAt(j),'c');
                }
            }
        }
        
        //assigning characters in each array and substituting; L(u+v)  
        for(int i=0; i<box.length; i++){
            for(int j=0; j<box[i].length; j++){
                box[i][j] = String.valueOf(term[i].charAt(j));
                
                switch (box[i][j]) {
                    case "a":
                        box[i][j] = "x+a";
                        break;
                    case "b":
                        box[i][j] = "y+b";
                        break;
                    case "c":
                        box[i][j] = "z+c";
                        break;
                    case "-":
                        box[i][j] = "+";                        
                    default:
                        break;
                }
            } 
        }
        
        //L(u+v)
        for(int i = 0; i<box.length; i++){
            for(int j=0; j<box[i].length; j++){
                switch (box[i][j]){
                    case "2":
                    case "3":
                    case "4":
                    case "5":
                    case "6":
                    case "7":
                    case "8":
                    case "9":{
                        if(box[i][j+1].equals("(")){
                            multiplier = box[i][j];
                            box[i][j] = "";
                        }
                        else if(flag == 1){
                            int number;
                            number = Integer.parseInt(multiplier)*Integer.parseInt(box[i][j]);
                            box[i][j] = String.valueOf(number);
                        }
                        break;
                    }
                    case "(":
                        flag = 1;
                        break;
                    case ")":
                        flag = 0;
                        break;
                    case "x+a":{
                        if(flag == 1){
                            box[i][j] = multiplier + "x+" + multiplier + "a";
                        }
                        break;
                    }
                    case "y+b":{
                        if(flag == 1){
                            box[i][j] = multiplier + "y+" + multiplier + "b";
                        }
                        break;
                    }
                    case "z+c":{
                        if(flag == 1){
                            box[i][j] = multiplier + "z+" + multiplier + "c";
                        }
                        break;
                    }
                }
            }
        }
        
        //combine array
        String all[] = new String [dimension];
        for(int i = 0; i<box.length; i++){
            for(int j=0; j<box[i].length; j++){
                all[i] = all[i]+box[i][j];
            }
        }
        
        //L(u+v) = L(u) + L(v)
        for(int i = 0; i<term.length; i++){
            if(all[i].equals(term[i])){
                counter++;
            }
        }
        
        //assigning characters in each array and substituting; L(ku)
        for(int i=0; i<box1.length; i++){
            for(int j=0; j<box1[i].length; j++){
                box1[i][j] = String.valueOf(term[i].charAt(j));
                
                switch (box1[i][j]) {
                    case "a":
                        box1[i][j] = "kx";
                        break;
                    case "b":
                        box1[i][j] = "ky";
                        break;
                    case "c":
                        box1[i][j] = "kz";
                        break;
                    case "-":
                        box1[i][j] = "+";                        
                    default:
                        break;
                }
            } 
        }
        
        //L(ku)
        for(int i = 0; i<box1.length; i++){
            for(int j=0; j<box1[i].length; j++){
                switch (box1[i][j]){
                    case "2":
                    case "3":
                    case "4":
                    case "5":
                    case "6":
                    case "7":
                    case "8":
                    case "9":{
                        if(box1[i][j+1].equals("(")){
                            multiplier = box1[i][j];
                            box1[i][j] = "";
                        }
                        else if(flag == 1){
                            int number;
                            number = Integer.parseInt(multiplier)*Integer.parseInt(box[i][j]);
                            box1[i][j] = String.valueOf(number);
                        }
                        break;
                    }
                    case "(":
                        flag = 1;
                        break;
                    case ")":
                        flag = 0;
                        break;
                    case "kx":{
                        if(flag == 1){
                            box1[i][j] = multiplier + "kx";
                        }
                        break;
                    }
                    case "ky":{
                        if(flag == 1){
                            box1[i][j] = multiplier + "ky";
                        }
                        break;
                    }
                    case "kz":{
                        if(flag == 1){
                            box1[i][j] = multiplier + "kz";
                        }
                        break;
                    }
                }
            }
        }
        
        //combine array
        String all1[] = new String [dimension];
        for(int i = 0; i<box1.length; i++){
            for(int j=0; j<box1[i].length; j++){
                all1[i] = all1[i]+box1[i][j];
            }
        }
        
        //kL(u)
        String term1[] = new String [dimension];
        for(int i=0; i<term1.length;i++){
            term[i] = 'k'+term[i];
        }
        
        //L(ku) = kL(u)
        for(int i = 0; i<term1.length; i++){
            if(all1[i].equals(term1[i])){
                counter++;
            }
        }
        
        if(counter == 2)
            answer.setText(right);
    }//GEN-LAST:event_solveActionPerformed

    private void cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cActionPerformed

    private void bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bActionPerformed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        // TODO add your handling code here:
        String left = n.getText();
        if(left.equals("2")){
            x.setText("x");
            y.setText("y");
            z.setText("");
            arrow.setVisible(true);
        }
        else if(left.equals("3")){
            x.setText("x");
            y.setText("y");
            z.setText("z");
            arrow.setVisible(true);
        }
    }//GEN-LAST:event_nActionPerformed

    private void nMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_nMouseClicked

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        // TODO add your handling code here:
        String right = m.getText();
        if(right.equals("2")){
            a.setVisible(true);
            b.setVisible(true);
            c.setVisible(false);
        }
        else if(right.equals("3")){
            a.setVisible(true);
            b.setVisible(true);
            c.setVisible(true);
        }
    }//GEN-LAST:event_mActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LinearTransformationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LinearTransformationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LinearTransformationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LinearTransformationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LinearTransformationUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a;
    private javax.swing.JLabel answer;
    private javax.swing.JLabel arrow;
    private javax.swing.JLabel arrow1;
    private javax.swing.JLabel arrow2;
    private javax.swing.JTextField b;
    private javax.swing.JTextField c;
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField m;
    private javax.swing.JTextField n;
    private javax.swing.JButton solve;
    private javax.swing.JLabel x;
    private javax.swing.JLabel y;
    private javax.swing.JLabel z;
    // End of variables declaration//GEN-END:variables
}
